（1）平衡二分木に関するテスト
    1.被験者には事前に以下のことを説明する
        ・平衡二分木のレイアウトに関するテストである。
        ・以下の条件を満たした平衡二分木を実装したい。
            ①各ノードには日本人の苗字と名前が格納されている
            ②全てのノードについて、左の子以下は自分の苗字よりも辞書順で前になるものであり、右の子以下は辞書順で後になるものである
            ③苗字が同じノードが複数あった場合は名前の辞書順に並べられる
        ・実装を行い、実際にあるクラスの名簿（男女それぞれ30人ずつ）のデータをツリーに格納させ、Kanonによってレイアウトさせた。
        【詳細】
            ▼クラス名：NameTree
            ▼フィールド：
                ▽left：左の子ノードを指す
                ▽right：右の子ノードを指す
                ▽parent：親ノードを指す
                ▽familyname：ノードに格納された苗字
                ▽firstname：ノードに格納された名前
        ・しかし、この実装には誤りがあったため一部の構造がおかしくなってしまっている。
        　その構造の誤りを、図からそれぞれ探してほしい。
            ①辞書順が乱れてしまっている箇所が１か所あるので、それを見つけたら指で指して伝える。また、「見つけた」と声でも宣言する。
    2.説明が終わった後で被験者に図を渡し、実際に間違いを見つけるまでの時間を測定する
        ・被験者には図（紙製）を裏返しで渡し、表にした時点から計測開始
        ・被験者が「見つけた」と宣言し、指摘した箇所が合っていたら測定終了
        　指摘した箇所が間違っていた場合はその旨を伝えてもう一度探してもらう。
        （「見つけた」と宣言された時点で時計は止め、こちらが「もう一度探してください。」と言ったら時計を再スタートする）

（2）トライ木（三分探索木）に関するテスト
    1.被験者には事前に以下のことを説明する
        ・三分探索木のレイアウトに関するテストである。
        ・以下の条件を満たした三分探索木を実装したい。
            ①各ノードには一つのアルファベットが格納されている
            ②各ノードは、
                ・その文字の代わりに、より小さな文字を指す左ノード
                ・その文字の代わりに、より大きな文字を指す右ノード
                ・その文字の次の文字を指す中央ノード
            　の子ノードを持つ
        ・三分探索木から格納されている文字列を取得するには次のような操作を行う
            ①根のノードから「子に中央ノードを持たないノード」まで辿り、その全ての経路上に格納されているアルファベットを羅列する。
            ②また、それぞれの経路について、アルファベット間に対応するエッジのフィールド名を書く。
            ③それぞれの経路に対して根から順に、leftエッジとrightエッジの出発点のアルファベットを消す。
        ・実装を行い、ある複数の英単語のデータをツリーに格納させ、Kanonによってレイアウトさせた。
        【詳細】
            ▼クラス名：Node
            ▼フィールド：
                ▽left：左の子ノードを指す
                ▽middle：中央の子ノードを指す
                ▽right：右の子ノードを指す
                ▽val：ノードに格納されたアルファベット
        ・このレイアウトされた図を見て、どのような英単語がツリーに格納されたのかを確かめるため、全ての格納された英単語を列挙してほしい。
    2.説明が終わった後で被験者に図を渡し、全ての単語を羅列するまでの時間を測定する
        ・被験者には図（紙製）を裏返しで渡し、表にした時点から計測開始
        ・被験者にはもう一枚の紙を渡し、ツリーに格納されている単語を書いていってもらう
        ・被験者が「全ての単語を書き切った」と宣言した時点で計測終了
        ・一回目の実験のときに、被験者が羅列した単語が誤ったものであればこちらから正しい答えとその求め方を提示し、問題の主旨を理解してもらうようにする

（3）二分木が格納されているリストに関するテスト
    1.被験者には事前に以下のことを説明する
        ・二分木が格納されたリストのレイアウトに関するテストである。
        ・以下の条件を満たしたデータ構造を実装したい。
            ①リストノードには各店舗の名前が格納されており、先頭から名前のアルファベット辞書順になっている
            ②二分木ノードには各商品の商品番号と値段が格納されている
            ③同じ店舗で扱われている商品同士が一つの二分木を生成し、店舗を表すリストノードから参照される
            ④商品の挿入・削除・検索をなるべく速いものにしたい
        ・④の性質を満たすように二分木を実装した。
        　この木は、根から葉までの道で最長のものの長さは、根から葉までの道で最短のものの長さの二倍を超えないという性質がある。
        【詳細】
            ▼クラス名：
                ▽Store：店舗を表すノード
                ▽Goods：商品を表すノード
            ▼Storeの持つフィールド：
                ▽next：次の店舗のノードを指す
                ▽prev：前の店舗のノードを指す
                ▽name：店舗の名前
                ▽goods：商品情報を格納したツリーの根のノードを指す
            ▼Goodsの持つフィールド
                ▽left：左の子ノードを指す
                ▽right：右の子ノードを指す
                ▽parent：親ノードを指す（根のノードの場合はその商品を扱っているStoreのノードを指す）
                ▽productNo：商品番号
                ▽price：商品の値段
        ・しかし、この実装には誤りがあったため、構造の一部がおかしくなってしまっている。
        　その構造の誤りを、図からそれぞれ探してほしい。
            ①上記の「根から葉までの道で最長のものの長さは、根から葉までの道で最短のものの長さの二倍を超えない」という性質が乱れてしまっている箇所が１か所あるので、
            　それを見つけたら指で指して伝える。また、「見つけた」と声でも宣言する。
    2.説明が終わった後で被験者に図を渡し、実際に間違いを見つけるまでの時間を測定する
        ・被験者には図（紙製）を裏返しで渡し、表にした時点から計測開始
        ・被験者が「見つけた」と宣言した時点で計測終了
        　指摘した箇所が間違っていた場合はその旨を伝えてもう一度探してもらう。
        （「見つけた」と宣言された時点で時計は止め、こちらが「もう一度探してください。」と言ったら時計を再スタートする）