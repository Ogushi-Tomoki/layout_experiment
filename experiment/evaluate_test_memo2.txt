（1）様々な種類のデータ構造のメンタルマップに関するテスト
        ・レイアウトされたデータ構造の図を見てもらい、「理解しやすい」と思う形に書き直してもらうテストである。
        ・「理解しやすい」形とは、第三者にそのデータ構造を説明するときに使用できるような形のことである。
            ※たとえば、自身が指導者として生徒にそのデータ構造を教えるときに書くような形である。

（2）平衡二分木に関するテスト
        ・平衡二分木のレイアウトに関するテストである。
        ・以下の条件を満たした平衡二分木を実装したい。
            ①各ノードには日本人の苗字と名前が格納されている
            ②全てのノードについて、左の子以下は自分の苗字よりも辞書順で前になるものであり、右の子以下は辞書順で後になるものである
            ③苗字が同じノードが複数あった場合は名前の辞書順に並べられる
        ・実装を行い、実際にあるクラスの名簿（男女合わせて11人）のデータをツリーに格納させ、Kanonによってレイアウトさせた。
        【詳細】
            ▼緑の矢印で指されているノード：根のノード
            ▼クラス名：NameTree
            ▼フィールド：
                ▽left：左の子ノードを指す
                ▽right：右の子ノードを指す
                ▽sei：ノードに格納された苗字
                ▽mei：ノードに格納された名前
        ・しかしこの実装には誤りがあったため、順序が間違えて格納されているノードが存在している。
        　誤った位置に存在しているノードの位置を、図からそれぞれ探してほしい。
            ①辞書順が乱れてしまっている箇所が１か所あるので、それを見つけたら指で指して伝える。また、「見つけた」と声でも宣言する。

（3）トライ木（三分探索木）に関するテスト
        ・三分探索木のレイアウトに関するテストである。
        ・以下の条件を満たした三分探索木を実装したい。
            ①各ノードには一つのアルファベットが格納されている
            ②各ノードは、
                ・その文字の代わりに、より小さな文字を指す左ノード
                ・その文字の代わりに、より大きな文字を指す右ノード
                ・その文字の次の文字を指す中央ノード
            　の子ノードを持つ
        ・三分探索木から格納されている文字列を取得するには次のような操作を行う
            ①根のノードから「子に中央ノードを持たないノード」まで辿り、その全ての経路上に格納されているアルファベットを羅列する。
            ②また、それぞれの経路について、アルファベット間に対応するエッジのフィールド名を書く。
            ③それぞれの経路に対して根から順に、leftエッジとrightエッジの出発点のアルファベットを消す。
        ・実装を行い、ある複数の英単語のデータをツリーに格納させ、Kanonによってレイアウトさせた。
        【詳細】
            ▼クラス名：Node
            ▼フィールド：
                ▽left：左の子ノードを指す
                ▽middle：中央の子ノードを指す
                ▽right：右の子ノードを指す
                ▽val：ノードに格納されたアルファベット
        ・このレイアウトされた図を見て、どのような英単語がツリーに格納されたのかを確かめるため、全ての格納された英単語を列挙してほしい。

（4）リストが格納されている二分木に関するテスト
        ・リストが格納された二分木に関するテストである。
        ・以下の条件を満たしたデータ構造を実装したい。
            ①全国にあるサーキットと、各サーキットでのタイム記録を管理したい
            ②リストノードにはあるサーキットでのタイム記録が格納されており、先頭からサーキット内でのタイムが早い順になっている
            ③二分木ノードにはサーキット固有のID番号が格納されており、二分探索木となっているのでサーキットの挿入・削除・検索が素早く行える
            ④二分木ノードからはそのサーキット内でのタイム記録を管理するリストノードの先頭を参照できる
        ・実装を行い、実際にいくつかのサーキットとタイム記録のデータを格納させ、Kanonによってレイアウトさせた。
        【詳細】
            ▼クラス名：
                ▽Circuit：サーキットを表す二分木ノード
                ▽Record：タイム記録を表すリストノード
            ▼Circuitの持つフィールド：
                ▽left：次のサーキットのノードを指す
                ▽right：前のサーキットのノードを指す
                ▽ID：サーキットのID番号
                ▽rcd：タイム記録の情報を格納したリストの先頭のノードを指す
            ▼Recordの持つフィールド
                ▽next：次のRecordノードを指す
                ▽time：タイム
        ・このレイアウトされた図を見て、どのサーキットが一番多くの記録（リストノード）を持っているかを探してほしい
            ①一番多くのリストノードを持つ二分木ノードを探し、それを見つけたら指で指して伝える。また、「見つけた」と声でも宣言する。